---
- import_tasks: 'reset.yml'

- name: test_panos_security_rule - Create
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Test'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['1.1.1.1']
    application: ['ssh']
    action: 'allow'
    device_group: '{{ device_group | default(omit) }}'
    audit_comment: 'Test audit comment'
  register: result

- name: test_panos_security_rule - Assert create was successful
  assert:
    that:
      - result is success
      - result is changed

- name: test_panos_security_rule - Create (idempotence)
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Test'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['1.1.1.1']
    application: ['ssh']
    action: 'allow'
    device_group: '{{ device_group | default(omit) }}'
    audit_comment: 'Testing audit_comment'
  register: result

- name: test_panos_security_rule - Assert create (idempotence) was successful
  assert:
    that:
      - result is success
      - result is not changed

- name: test_panos_security_rule - Modify
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Test'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['1.1.1.1', '2.2.2.2']
    application: ['ssh']
    action: 'allow'
    device_group: '{{ device_group | default(omit) }}'
  register: result
  diff: true

- name: test_panos_security_rule - Assert modify was successful
  assert:
    that:
      - result is success
      - result is changed

- name: test_panos_security_rule - Delete
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Test'
    state: 'absent'
    device_group: '{{ device_group | default(omit) }}'
  register: result

- name: test_panos_security_rule - Assert delete was successful
  assert:
    that:
      - result is success
      - result is changed

- name: test_panos_security_rule - Test rule ordering (1)
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Three'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['3.3.3.3']
    application: ['ssh']
    action: 'allow'
    device_group: '{{ device_group | default(omit) }}'

- name: test_panos_security_rule - Test rule ordering (2)
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Two'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['2.2.2.2']
    application: ['ssh']
    action: 'allow'
    location: 'top'
    device_group: '{{ device_group | default(omit) }}'

- name: test_panos_security_rule  - Test rule ordering (3)
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'One'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['1.1.1.1']
    application: ['ssh']
    action: 'allow'
    location: 'before'
    existing_rule: 'Two'
    device_group: '{{ device_group | default(omit) }}'

- name: test_panos_security_rule - Test rule ordering (4)
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Four'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['4.4.4.4']
    application: ['ssh']
    action: 'allow'
    location: 'bottom'
    device_group: '{{ device_group | default(omit) }}'

- name: test_panos_security_rule  - Test rule ordering (5)
  paloaltonetworks.panos.panos_security_rule:
    provider: '{{ device }}'
    rule_name: 'Five'
    description: 'Test description'
    source_zone: ['inside']
    source_ip: ['any']
    destination_zone: ['outside']
    destination_ip: ['5.5.5.5']
    application: ['ssh']
    action: 'allow'
    location: 'after'
    existing_rule: 'Four'
    device_group: '{{ device_group | default(omit) }}'

- name: test_panos_security_rule - Retrieve rulebase
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ device }}"
    gathered_filter: "*"
    state: gathered
  register: security_rules

- name: test_panos_security_rule - Gather rule names
  ansible.builtin.set_fact:
    rule_names: "{{ item.rule_name }}"
  with_items: "{{ security_rules.gathered }}"
  register: security_rule_names

- name: test_panos_security_rule - Put rule names in a string
  ansible.builtin.set_fact:
    security_rule_names_string: "{% for i in security_rule_names.results %}{{ i.ansible_facts.rule_names }}{% if not loop.last %},{% endif %}{%endfor%}"

- name: test_panos_security_rule - Assert rule ordering matches expected
  assert:
    that:
      - security_rules is success
      - security_rule_names_string == "One,Two,Three,Four,Five"

- name: test_panos_security_rule - Make sure changes commit cleanly
  paloaltonetworks.panos.panos_commit_firewall:
    provider: '{{ device }}'
  register: result

- name: test_panos_security_rule - Assert commit was successful
  assert:
    that:
      - result is success
