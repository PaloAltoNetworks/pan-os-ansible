name: CI/CD

on:
  push:
    branches:
      - master
      - develop
      - beta
      - alpha
      - '[0-9]+.x'
      - '[0-9]+.[0-9]+.x'
  pull_request:

jobs:
  sanity:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        ansible-version: [2.9.*, 2.10.*]

    defaults:
      run:
        working-directory: ./ansible_collections/paloaltonetworks/panos

    steps:
      - uses: actions/checkout@v2
        with:
          path: ./ansible_collections/paloaltonetworks/panos

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.1.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install sanity dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install "ansible==${{ matrix.ansible-version }}" pycodestyle pylint voluptuous yamllint

      - name: ansible-test sanity
        run: |
          ansible-test sanity plugins/

  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.2
        with:
          python-version: 3.8

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Build collection
        run: |
          ansible-galaxy collection build

  release:
    name: release
    if: github.event_name == 'push' && github.ref != 'refs/heads/develop'
    needs: [sanity, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.2
        with:
          python-version: 3.8

      - name: Install Ansible
        run: |
          pip install --upgrade pip
          pip install ansible

      - name: Set up Galaxy auth
        run: |
          mkdir -p ~/.ansible
          echo "token: $GALAXY_API_KEY" > ~/.ansible/galaxy_token
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
        shell: bash

      - name: Create release and publish
        id: release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.1.1
          extra_plugins: |
            conventional-changelog-conventionalcommits@^4.4.0
            @semantic-release/git@^9.0.0
            @semantic-release/exec@^5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install documentation utils
        run: |
          pip install Sphinx sphinx-rtd-theme
          pip install git+https://github.com/mrichardson03/ansible-doc-extractor.git

      - name: Generate documentation
        run: |
          cd docs
          mkdir -p source/modules
          ansible-doc-extractor --template templates/module.rst.j2 source/modules ../plugins/modules/panos*.py
          sphinx-build source html

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/html # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch