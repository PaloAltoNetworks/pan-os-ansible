.. _panos_address_group_module:


panos_address_group -- Create address group objects on PAN-OS devices.
======================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Create address group objects on PAN-OS devices.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  name (required, type: str)
    Name of address group to create.


  static_value (type: list)
    List of address objects to be included in the group.


  dynamic_value (type: str)
    Registered IP tags for a dynamic address group.


  description (type: str)
    Descriptive name for this address group.


  tag (type: list)
    List of tags to add to this address group.


  commit (type: bool)
    Commit changes after creating object.  If *ip_address* is a Panorama device, and *device_group* is also set, perform a commit to Panorama and a commit-all to the device group.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  vsys (type: str, default: vsys1)
    The vsys this object belongs to.


  device_group (type: str, default: shared)
    (Panorama only) The device group the operation should target.


  state (type: str, default: present)
    The state.





Notes
-----

.. note::
   - Panorama is supported.
   - Check mode is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Create object group 'Prod'
      panos_address_group:
        provider: '{{ provider }}'
        name: 'Prod'
        static_value: ['Test-One', 'Test-Three']
        tag: ['Prod']

    - name: Create object group 'SI'
      panos_address_group:
        provider: '{{ provider }}'
        name: 'SI'
        dynamic_value: "'SI_Instances'"
        tag: ['SI']

    - name: Delete object group 'SI'
      panos_address_group:
        provider: '{{ provider }}'
        name: 'SI'
        state: 'absent'





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Michael Richardson (@mrichardson03)
- Garfield Lee Freeman (@shinmog)

