.. _panos_object_facts_module:


panos_object_facts -- Retrieve facts about objects on PAN-OS devices.
=====================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Retrieves tag information objects on PAN-OS devices.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  name (type: str)
    Name of object to retrieve.

    Mutually exclusive with *name_regex* and *field*.


  name_regex (type: str)
    A python regex for an object's name to retrieve.

    Mutually exclusive with *name* and *field*.


  field (type: str)
    The field to search instead of name.

    Mutually exclusive with *name* and *name_regex*


  field_search_type (type: str, default: exact)
    The type of search to perform when doing a *field* search.


  field_search_value (type: str)
    The value for the *field_search* and *field* specified.


  object_type (type: str, default: address)
    Type of object to retrieve.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  vsys (type: str, default: vsys1)
    The vsys this object belongs to.


  device_group (type: str, default: shared)
    (Panorama only) The device group the operation should target.





Notes
-----

.. note::
   - Panorama is supported.
   - Check mode is not supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Retrieve address group object 'Prod'
      panos_object_facts:
        provider: '{{ provider }}'
        name: 'Prod'
        object_type: 'address-group'
      register: result

    - name: Retrieve service group object 'Prod-Services'
      panos_object_facts:
        provider: '{{ provider }}'
        name: 'Prod-Services'
        object_type: 'service-group'
      register: result

    - name: Find all address objects with "Prod" in the name
      panos_object_facts:
        provider: '{{ provider }}'
        name_regex: '.*Prod.*'
        object_type: 'address'
      register: result

    - name: Find all static address objects that use addy1
      panos_object_facts:
        provider: '{{ provider }}'
        object_type: 'address-group'
        field: 'static_value'
        field_search_type: 'exact'
        field_search_value: 'addy1'
      register: result



Return Values
-------------

ansible_module_results (when "name" is specified, dict, )
  Dict containing object attributes.  Empty if object is not found.


objects (always, list, )
  List of object dicts.





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Michael Richardson (@mrichardson03)
- Garfield Lee Freeman (@shinmog)

