.. _panos_gre_tunnel_module:


panos_gre_tunnel -- Create GRE tunnels on PAN-OS devices.
=========================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Create GRE tunnel objects on PAN-OS devices.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  name (required, type: str)
    Name of object to create.


  interface (type: str)
    Interface to terminate the tunnel.


  local_address_type (type: str, default: ip)
    Type of local address.


  local_address_value (type: str)
    IP address value.


  peer_address (type: str)
    Peer IP address.


  tunnel_interface (type: str)
    To apply GRE tunnels to tunnel interface.


  ttl (type: int, default: 64)
    TTL.


  copy_tos (type: bool)
    Copy IP TOS bits from inner packet to GRE packet.


  enable_keep_alive (type: bool)
    Enable tunnel monitoring.


  keep_alive_interval (type: int, default: 10)
    Keep alive interval.


  keep_alive_retry (type: int, default: 3)
    Keep alive retry time.


  keep_alive_hold_timer (type: int, default: 5)
    Keep alive hold timer.


  disabled (type: bool)
    Disable the GRE tunnel.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  template (type: str)
    (Panorama only) The template this operation should target. Mutually exclusive with *template_stack*.


  template_stack (type: str)
    (Panorama only) The template stack this operation should target. Mutually exclusive with *template*.


  state (type: str, default: present)
    The state.





Notes
-----

.. note::
   - Minimum PAN-OS version: 9.0
   - Panorama is supported.
   - Check mode is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.
   - If the PAN-OS to be configured is Panorama, either *template* or *template_stack* must be specified.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Create GRE tunnel
      panos_gre_tunnel:
        provider: '{{ provider }}'
        name: 'myGreTunnel'
        interface: 'ethernet1/5'
        local_address_value: '10.1.1.1/24'
        peer_address: '192.168.1.1'
        tunnel_interface: 'tunnel.7'
        ttl: 42





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Garfield Lee Freeman (@shinmog)

