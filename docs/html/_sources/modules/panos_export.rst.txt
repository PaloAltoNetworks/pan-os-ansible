.. _panos_export_module:


panos_export -- export file from PAN-OS devices
===============================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Export files from PAN-OS device




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice
- xmltodict



Parameters
----------

  category (type: str, default: configuration)
    Element type to export.


  certificate_name (type: str)
    Name of the certificate to export.


  certificate_format (type: str)
    Format for the certificate.


  certificate_include_keys (type: bool)
    Whether to include the private key in the export.


  certificate_passphrase (type: str)
    Passphrase used to encrypt the certificate and/or private key.


  filename (type: str)
    Local path to output file (if any).


  application_pcap_name (type: str)
    When *category=application-pcap*, this can be a blank string, a packet capture directory name, or a packet capture name.  If the value is either blank or a directory name, a list of directories or packet capture files will be returned.  If the value is a packet capture file name, the file will be written to *filename*.


  dlp_pcap_name (type: str)
    When *category=dlp-pcap*, this value can be a blank string, or a packet capture name.  If the value is blank, a list of packet capture files will be returned.  If the value is a packet capture file name, the file will be written to *filename*.


  dlp_password (type: str)
    Password used to decrypt DLP packet capture.


  filter_pcap_name (type: str)
    When *category=filter-pcap*, this value can be a blank string, or a packet capture name.  If the value is blank, a list of packet capture files will be returned.  If the value is a packet capture file name, the file will be written to *filename*.


  threat_pcap_id (type: str)
    When *category=threat-pcap*, this value is a unique identifier for the packet capture, and can be obtained from the 'pcap_id' field in the THREAT log.


  threat_pcap_search_time (type: str)
    When *category=threat-pcap*, this value is is used to narrow the search for the 'pcap_id' and is used to set a time window in the range -5 minutes to +2 hours of the time specified. The search time is typically set to the **receive_time** field in the THREAT log. The PAN-OS log time string format is used, for example '2015/01/20 10:51:09'.  If the value is not specified, it will be set to the threat epoch time which is part of the 'pcap_id'.


  threat_pcap_serial (type: str)
    When *category=threat-pcap*, this value is required when exporting from Panorama and is used to specify the device to fetch the packet capture from.


  timeout (type: int, default: 600)
    When category is set to 'tech-support', 'stats-dump', or 'device-state', the operating can take a while to complete.  This is the maximum amount of time to wait, in seconds.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.





Notes
-----

.. note::
   - Checkmode is NOT supported.
   - Panorama is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Export configuration
      panos_export:
        provider: '{{ provider }}'
        category: 'configuration'
        filename: 'running-config.xml'

    - name: Export application block page
      panos_export:
        provider: '{{ provider }}'
        category: 'application-block-page'
        filename: 'application-block-page.html'

    - name: Export tech support (module will wait until file is ready)
      panos_export:
        provider: '{{ provider }}'
        category: 'tech-support'
        filename: 'tech-support.tgz'

    - name: Export threat packet capture
      panos_export:
        provider: '{{ provider }}'
        category: 'threat-pcap'
        threat_pcap_id: '1206450340254187521'
        threat_pcap_search_time: '2020/07/20 18:20:19'
        filename: 'threat.pcap'



Return Values
-------------

stdout (success, string, {'dir-listing': {'file': ['/capture-rx', '/capture-tx', '/capture-fw']}})
  If the output gives a directory listing, give the listing as JSON formatted string


stdout_xml (success, str, <dir-listing><file>/capture-rx</file><file>/capture-tx</file><file>/capture-fw</file></dir-listing>)
  If the output gives a directory listing, give the listing as XML formatted string





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Michael Richardson (@mrichardson03)

