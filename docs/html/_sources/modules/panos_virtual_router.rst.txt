.. _panos_virtual_router_module:


panos_virtual_router -- Configures a Virtual Router
===================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Manage PANOS Virtual Router




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  commit (type: bool)
    Commit configuration if changed.


  name (type: str, default: default)
    Name of virtual router


  interface (type: list)
    List of interface names


  ad_static (type: int)
    Administrative distance for this protocol


  ad_static_ipv6 (type: int)
    Administrative distance for this protocol


  ad_ospf_int (type: int)
    Administrative distance for this protocol


  ad_ospf_ext (type: int)
    Administrative distance for this protocol


  ad_ospfv3_int (type: int)
    Administrative distance for this protocol


  ad_ospfv3_ext (type: int)
    Administrative distance for this protocol


  ad_ibgp (type: int)
    Administrative distance for this protocol


  ad_ebgp (type: int)
    Administrative distance for this protocol


  ad_rip (type: int)
    Administrative distance for this protocol


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  state (type: str, default: present)
    The state.


  vsys (type: str)
    The vsys this object should be imported into.  Objects that are imported include interfaces, virtual routers, virtual wires, and VLANs.  Interfaces are typically imported into vsys1 if no vsys is specified.


  template (type: str)
    (Panorama only) The template this operation should target. Mutually exclusive with *template_stack*.


  template_stack (type: str)
    (Panorama only) The template stack this operation should target. Mutually exclusive with *template*.





Notes
-----

.. note::
   - Checkmode is supported.
   - Panorama is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.
   - If the PAN-OS to be configured is Panorama, either *template* or *template_stack* must be specified.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Create Virtual Router
      panos_virtual_router:
        provider: '{{ provider }}'
        name: vr-1
        commit: true





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Joshua Colson (@freakinhippie)
- Garfield Lee Freeman (@shinmog)

