.. _panos_cert_gen_ssh_module:


panos_cert_gen_ssh -- generates a self-signed certificate using SSH protocol with SSH key
=========================================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

This module generates a self-signed certificate that can be used by GlobalProtect client, SSL connector, or

otherwise. Root certificate must be preset on the system first. This module depends on paramiko for ssh.




Requirements
------------
The below requirements are needed on the host that executes this module.

- paramiko



Parameters
----------

  ip_address (required, type: str)
    IP address (or hostname) of PAN-OS device being configured.


  key_filename (type: str)
    Location of the filename that is used for the auth. Either *key_filename* or *password* is required.


  username (type: str, default: admin)
    User name to use for auth. Default is admin.


  password (type: str)
    Password credentials to use for auth. Either *key_filename* or *password* is required.


  cert_friendly_name (required, type: str)
    Human friendly certificate name (not CN but just a friendly name).


  cert_cn (required, type: str)
    Certificate CN (common name) embedded in the certificate signature.


  signed_by (required, type: str)
    Undersigning authority (CA) that MUST already be presents on the device.


  rsa_nbits (type: str, default: 2048)
    Number of bits used by the RSA algorithm for the certificate generation.





Notes
-----

.. note::
   - Checkmode is not supported.




Examples
--------

.. code-block:: yaml+jinja

    
    # Generates a new self-signed certificate using ssh
    - name: generate self signed certificate
      panos_cert_gen_ssh:
        ip_address: "192.168.1.1"
        username: "admin"
        password: "paloalto"
        cert_cn: "1.1.1.1"
        cert_friendly_name: "test123"
        signed_by: "root-ca"





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Luigi Mori (@jtschichold), Ivan Bojer (@ivanbojer)

