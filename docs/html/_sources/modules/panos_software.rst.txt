.. _panos_software_module:


panos_software -- Manage PAN-OS software versions.
==================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Install specific release of PAN-OS.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  version (required, type: str)
    Desired PAN-OS release for target device.


  sync_to_peer (type: bool)
    If device is a member of a HA pair, perform actions on the peer device as well.  Only used when downloading software - installation must be performed on both devices.


  download (type: bool, default: True)
    Download PAN-OS version to the device.


  install (type: bool, default: True)
    Perform installation of the PAN-OS version on the device.


  restart (type: bool)
    Restart device after installing desired version.  Use in conjunction with panos_check to determine when firewall is ready again.


  timeout (type: int, default: 1200)
    Timeout value in seconds to wait for the device operation to complete


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.





Notes
-----

.. note::
   - Panorama is supported.
   - Check mode is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Install PAN-OS 8.1.6 and restart
      panos_software:
        provider: '{{ provider }}'
        version: '8.1.6'
        restart: true

    - name: Download PAN-OS 9.0.0 base image only
      panos_software:
        provider: '{{ provider }}'
        version: '9.0.0'
        install: false
        restart: false

    - name: Download PAN-OS 9.0.1 and sync to HA peer
      panos_software:
        provider: '{{ provider }}'
        version: '9.0.1'
        sync_to_peer: true
        install: false
        restart: false



Return Values
-------------

version (on success, str, )
  After performing the software install, returns the version installed on the device.





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Michael Richardson (@mrichardson03)

