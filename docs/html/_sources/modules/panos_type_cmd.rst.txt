.. _panos_type_cmd_module:


panos_type_cmd -- Execute arbitrary TYPE commands on PAN-OS
===========================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

This module allows you to execute arbitrary TYPE commands on PAN-OS.

This module does not provide guards of any sort, so USE AT YOUR OWN RISK.

Refer to the PAN-OS and Panorama API guide for more info.

https://docs.paloaltonetworks.com/pan-os.html




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python
- pandevice



Parameters
----------

  cmd (type: str, default: set)
    The command to run.


  xpath (required, type: str)
    The XPATH.

    All newlines are removed from the XPATH to allow for shorter lines.


  element (type: str)
    Used in *cmd=set*, *cmd=edit*, and *cmd=override*.

    The element payload.


  where (type: str)
    Used in *cmd=move*.

    The movement keyword.


  dst (type: str)
    Used in *cmd=move*.

    The reference object.


  new_name (type: str)
    Used in *cmd=rename* and *cmd=clone*.

    The new name.


  xpath_from (type: str)
    Used in *cmd=clone*.

    The from xpath.


  extra_qs (type: dict)
    A dict of extra params to pass in.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.





Notes
-----

.. note::
   - Panorama is supported.
   - Check mode is not supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Create an address object using set.
      panos_type_cmd:
        provider: '{{ provider }}'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /address
        element: |
          <entry name="sales-block">
            <ip-netmask>192.168.55.0/24</ip-netmask>
            <description>Address CIDR for sales org</description>
          </entry>

    - name: Then rename it.
      panos_type_cmd:
        provider: '{{ provider }}'
        cmd: 'rename'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /address/entry[@name='sales-block']
        new_name: 'dmz-block'

    - name: Show the address object.
      panos_type_cmd:
        provider: '{{ provider }}'
        cmd: 'show'
        xpath: |
          /config/devices/entry[@name='localhost.localdomain']
          /vsys/entry[@name='vsys1']
          /address/entry[@name='dmz-block']



Return Values
-------------

stdout (success, str, {entry: {@name: dmz-block, ip-netmask: 192.168.55.0/24, description: Address CIDR for sales org}})
  output (if any) of the given API command as JSON formatted string


stdout_xml (success, str, <entry name=dmz-block><ip-netmask>192.168.55.0/24</ip-netmask>...</entry>)
  output of the given API command as an XML formatted string





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Garfield Lee Freeman (@shinmog)

