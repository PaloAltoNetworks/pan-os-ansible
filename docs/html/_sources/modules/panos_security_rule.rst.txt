.. _panos_security_rule_module:


panos_security_rule -- Create security rule policy on PAN-OS devices or Panorama management console.
====================================================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Security policies allow you to enforce rules and take action, and can be as general or specific as needed.

The policy rules are compared against the incoming traffic in sequence, and because the first rule that matches

the traffic is applied, the more specific rules must precede the more general ones.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  rule_name (required, type: str)
    Name of the security rule.


  source_zone (type: list, default: ['any'])
    List of source zones.


  source_ip (type: list, default: ['any'])
    List of source addresses.


  source_user (type: list, default: ['any'])
    Use users to enforce policy for individual users or a group of users.


  hip_profiles (type: list, default: ['any'])
    - If you are using GlobalProtect with host information profile (HIP) enabled, you can also base the policy on information collected by GlobalProtect. For example, the user access level can be determined HIP that notifies the firewall about the user's local configuration.



  destination_zone (type: list, default: ['any'])
    List of destination zones.


  destination_ip (type: list, default: ['any'])
    List of destination addresses.


  application (type: list, default: ['any'])
    List of applications, application groups, and/or application filters.


  service (type: list, default: ['application-default'])
    List of services and/or service groups.


  category (type: list, default: ['any'])
    List of destination URL categories.


  action (type: str, default: allow)
    Action to apply once rules matches.


  log_setting (type: str)
    Log forwarding profile.


  log_start (type: bool)
    Whether to log at session start.


  log_end (type: bool, default: True)
    Whether to log at session end.


  description (type: str)
    Description of the security rule.


  rule_type (type: str, default: universal)
    Type of security rule (version 6.1 of PanOS and above).


  tag_name (type: list)
    List of tags associated with the rule.


  negate_source (type: bool)
    Match on the reverse of the 'source_ip' attribute


  negate_destination (type: bool)
    Match on the reverse of the 'destination_ip' attribute


  disabled (type: bool)
    Disable this rule.


  schedule (type: str)
    Schedule in which this rule is active.


  icmp_unreachable (type: bool)
    Send 'ICMP Unreachable'. Used with 'deny', 'drop', and 'reset' actions.


  disable_server_response_inspection (type: bool)
    Disables packet inspection from the server to the client. Useful under heavy server load conditions.


  group_profile (type: str)
    - Security profile group that is already defined in the system. This property supersedes antivirus, vulnerability, spyware, url_filtering, file_blocking, data_filtering, and wildfire_analysis properties.



  antivirus (type: str)
    Name of the already defined antivirus profile.


  vulnerability (type: str)
    Name of the already defined vulnerability profile.


  spyware (type: str)
    Name of the already defined spyware profile.


  url_filtering (type: str)
    Name of the already defined url_filtering profile.


  file_blocking (type: str)
    Name of the already defined file_blocking profile.


  data_filtering (type: str)
    Name of the already defined data_filtering profile.


  wildfire_analysis (type: str)
    Name of the already defined wildfire_analysis profile.


  location (type: str)
    Position to place the created rule in the rule base.  Supported values are *top*/*bottom*/*before*/*after*.


  existing_rule (type: str)
    If 'location' is set to 'before' or 'after', this option specifies an existing rule name.  The new rule will be created in the specified position relative to this rule.  If 'location' is set to 'before' or 'after', this option is required.


  devicegroup (type: str)
    **Deprecated**

    Use *device_group* instead.

    ------------

    Device groups are logical groups of firewalls in Panorama.


  target (type: list)
    Apply this rule exclusively to the listed firewalls in Panorama.


  negate_target (type: bool)
    Exclude this rule from the listed firewalls in Panorama.


  operation (type: str)
    **Removed**

    Use *state* instead.


  commit (type: bool)
    Commit configuration if changed.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  state (type: str, default: present)
    The state.


  device_group (type: str, default: shared)
    (Panorama only) The device group the operation should target.


  vsys (type: str, default: vsys1)
    The vsys this object belongs to.


  rulebase (type: str)
    The rulebase in which the rule is to exist.  If left unspecified, this defaults to *rulebase=pre-rulebase* for Panorama.  For NGFW, this is always set to be *rulebase=rulebase*.





Notes
-----

.. note::
   - Checkmode is supported.
   - Panorama is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: add SSH inbound rule to Panorama device group
      panos_security_rule:
        provider: '{{ provider }}'
        device_group: 'Cloud Edge'
        rule_name: 'SSH permit'
        description: 'SSH rule test'
        tag_name: ['production']
        source_zone: ['public']
        source_ip: ['any']
        destination_zone: ['private']
        destination_ip: ['1.1.1.1']
        application: ['ssh']
        action: 'allow'

    - name: add a rule to allow HTTP multimedia only to CDNs
      panos_security_rule:
        provider: '{{ provider }}'
        rule_name: 'HTTP Multimedia'
        description: 'Allow HTTP multimedia only to host at 1.1.1.1'
        source_zone: ['private']
        destination_zone: ['public']
        category: ['content-delivery-networks']
        application: ['http-video', 'http-audio']
        service: ['service-http', 'service-https']
        action: 'allow'

    - name: add a more complex rule that uses security profiles
      panos_security_rule:
        provider: '{{ provider }}'
        rule_name: 'Allow HTTP'
        source_zone: ['public']
        destination_zone: ['private']
        log_start: false
        log_end: true
        action: 'allow'
        antivirus: 'strict'
        vulnerability: 'strict'
        spyware: 'strict'
        url_filtering: 'strict'
        wildfire_analysis: 'default'

    - name: disable a Panorama pre-rule
      panos_security_rule:
        provider: '{{ provider }}'
        device_group: 'Production edge'
        rule_name: 'Allow telnet'
        source_zone: ['public']
        destination_zone: ['private']
        source_ip: ['any']
        destination_ip: ['1.1.1.1']
        log_start: false
        log_end: true
        action: 'allow'
        disabled: true

    - name: delete a device group security rule
      panos_security_rule:
        provider: '{{ provider }}'
        state: 'absent'
        device_group: 'DC Firewalls'
        rule_name: 'Allow telnet'

    - name: add a rule at a specific location in the rulebase
      panos_security_rule:
        provider: '{{ provider }}'
        rule_name: 'SSH permit'
        description: 'SSH rule test'
        source_zone: ['untrust']
        destination_zone: ['trust']
        source_ip: ['any']
        source_user: ['any']
        destination_ip: ['1.1.1.1']
        category: ['any']
        application: ['ssh']
        service: ['application-default']
        action: 'allow'
        location: 'before'
        existing_rule: 'Allow MySQL'





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Ivan Bojer (@ivanbojer)
- Robert Hagen (@stealthllama)
- Michael Richardson (@mrichardson03)
- Garfield Lee Freeman (@shinmog)

