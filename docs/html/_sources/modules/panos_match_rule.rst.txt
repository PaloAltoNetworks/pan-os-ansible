.. _panos_match_rule_module:


panos_match_rule -- Test for match against a security rule on PAN-OS devices or Panorama management console.
============================================================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Security policies allow you to enforce rules and take action, and can be as general or specific as needed.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice
- xmltodict



Parameters
----------

  rule_type (type: str, default: security)
    Type of rule.


  source_zone (type: str)
    The source zone.


  source_ip (required, type: str)
    The source IP address.


  source_port (type: int)
    The source port.


  source_user (type: str)
    The source user or group.


  to_interface (type: str)
    The inbound interface in a NAT rule.


  destination_zone (type: str)
    The destination zone.


  destination_ip (required, type: str)
    The destination IP address.


  destination_port (required, type: int)
    The destination port.


  application (type: str)
    The application.


  protocol (required, type: int)
    The IP protocol number from 1 to 255.


  category (type: str)
    URL category


  vsys_id (type: str)
    **Removed**

    Use *vsys* instead.


  rulebase (type: str)
    **DEPRECATED**

    This is no longer used and may safely be removed from your playbook.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  vsys (type: str, default: vsys1)
    The vsys this object belongs to.





Notes
-----

.. note::
   - Checkmode is not supported.
   - Panorama NOT is supported.  However, specifying Panorama *provider* info with a target serial number is.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: check security rules for Google DNS
      panos_match_rule:
        provider: '{{ provider }}'
        source_ip: '10.0.0.0'
        destination_ip: '8.8.8.8'
        application: 'dns'
        destination_port: '53'
        protocol: '17'
      register: result
    - debug: msg='{{ result.rule }}'

    - name: check security rules inbound SSH with user match
      panos_match_rule:
        provider: '{{ provider }}'
        source_ip: '0.0.0.0'
        source_user: 'mydomain\jsmith'
        destination_ip: '192.168.100.115'
        destination_port: '22'
        protocol: '6'
      register: result
    - debug: msg='{{ result.rule }}'

    - name: check NAT rules for source NAT
      panos_match_rule:
        provider: '{{ provider }}'
        rule_type: 'nat'
        source_zone: 'Prod-DMZ'
        source_ip: '10.10.118.50'
        to_interface: 'ethernet1/2'
        destination_zone: 'Internet'
        destination_ip: '0.0.0.0'
        protocol: '6'
      register: result
    - debug: msg='{{ result.rule }}'

    - name: check NAT rules for inbound web
      panos_match_rule:
        provider: '{{ provider }}'
        rule_type: 'nat'
        source_zone: 'Internet'
        source_ip: '0.0.0.0'
        to_interface: 'ethernet1/1'
        destination_zone: 'Prod DMZ'
        destination_ip: '192.168.118.50'
        destination_port: '80'
        protocol: '6'
      register: result
    - debug: msg='{{ result.rule }}'

    - name: check security rules for outbound POP3 in vsys4
      panos_match_rule:
        provider: '{{ provider }}'
        vsys_id: 'vsys4'
        source_ip: '10.0.0.0'
        destination_ip: '4.3.2.1'
        application: 'pop3'
        destination_port: '110'
        protocol: '6'
      register: result
    - debug: msg='{{ result.rule }}'



Return Values
-------------

stdout_lines (always, str, )
  **DEPRECATED**; use "rule" instead


rule (always, dict, )
  The rule definition, either security rule or NAT rule


rulebase (always, str, )
  Rule location; panorama-pre-rulebase, firewall-rulebase, or panorama-post-rulebase





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Robert Hagen (@stealthllama)

