.. _panos_static_route_module:


panos_static_route -- Create static routes on PAN-OS devices.
=============================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Create static routes on PAN-OS devices.




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPI https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPI https://pypi.python.org/pypi/pandevice



Parameters
----------

  name (required, type: str)
    Name of static route.


  destination (type: str)
    Destination network.  Required if *state=present*.


  nexthop_type (type: str, default: ip-address)
    Type of next hop.


  nexthop (type: str)
    Next hop IP address.  Required if *state=present*.


  admin_dist (type: str)
    Administrative distance for static route.


  metric (type: int, default: 10)
    Metric for route.


  virtual_router (type: str, default: default)
    Virtual router to use.


  interface (type: str)
    The Interface to use.


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  state (type: str, default: present)
    The state.


  template (type: str)
    (Panorama only) The template this operation should target. Mutually exclusive with *template_stack*.


  template_stack (type: str)
    (Panorama only) The template stack this operation should target. Mutually exclusive with *template*.





Notes
-----

.. note::
   - Checkmode is supported.
   - Panorama is supported.
   - IPv6 is not supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.
   - If the PAN-OS to be configured is Panorama, either *template* or *template_stack* must be specified.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Create route 'Test-One'
      panos_static_route:
        provider: '{{ provider }}'
        name: 'Test-One'
        destination: '1.1.1.0/24'
        nexthop: '10.0.0.1'

    - name: Create route 'Test-Two'
      panos_static_route:
        provider: '{{ provider }}'
        name: 'Test-Two'
        destination: '2.2.2.0/24'
        nexthop: '10.0.0.1'

    - name: Create route 'Test-Three'
      panos_static_route:
        provider: '{{ provider }}'
        name: 'Test-Three'
        destination: '3.3.3.0/24'
        nexthop: '10.0.0.1'

    - name: Delete route 'Test-Two'
      panos_static_route:
        provider: '{{ provider }}'
        name: 'Test-Two'
        state: 'absent'

    - name: Create route 'Test-Four'
      panos_static_route:
        provider: '{{ provider }}'
        name: 'Test-Four'
        destination: '4.4.4.0/24'
        nexthop: '10.0.0.1'
        virtual_router: 'VR-Two'

    - name: Create route 'Test-Five'
      panos_static_route:
        provider: '{{ provider }}'
        name: 'Test-Five'
        destination: '5.5.5.0/24'
        nexthop_type: 'none'





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Michael Richardson (@mrichardson03)
- Garfield Lee Freeman (@shinmog)

