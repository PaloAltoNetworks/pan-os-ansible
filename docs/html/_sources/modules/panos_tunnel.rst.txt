.. _panos_tunnel_module:


panos_tunnel -- configure tunnel interfaces
===========================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Configure tunnel interfaces on PanOS




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-python can be obtained from PyPi https://pypi.python.org/pypi/pan-python
- pandevice can be obtained from PyPi https://pypi.python.org/pypi/pandevice



Parameters
----------

  if_name (required, type: str)
    Name of the interface to configure.


  ip (type: list)
    List of static IP addresses.


  ipv6_enabled (type: bool)
    Enable IPv6.


  management_profile (type: str)
    Interface management profile name; it must already exist.


  mtu (type: int)
    MTU for tunnel interface.


  netflow_profile (type: str)
    Netflow profile for tunnel interface.


  comment (type: str)
    Interface comment.


  zone_name (type: str)
    Name of the zone for the interface. If the zone does not exist it is created but if the zone exists and it is not of the correct mode the operation will fail.


  vr_name (type: str)
    Name of the virtual router; it must already exist.


  vsys_dg (type: str)
    **Deprecated**

    Use *vsys* to specify the vsys instead.

    ------------

    Name of the vsys (if firewall) or device group (if panorama) to put this object.


  commit (type: bool)
    Commit if changed


  provider (type: )
    A dict object containing connection details.


    ip_address (type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  ip_address (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The IP address or hostname of the PAN-OS device being configured.


  username (type: str, default: admin)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The username to use for authentication.  This is ignored if *api_key* is specified.


  password (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The password to use for authentication.  This is ignored if *api_key* is specified.


  api_key (type: str)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The API key to use instead of generating it using *username* / *password*.


  port (type: int, default: 443)
    **Deprecated**

    Use *provider* to specify PAN-OS connectivity instead.

    ------------

    The port number to connect to the PAN-OS device on.


  state (type: str, default: present)
    The state.


  vsys (type: str)
    The vsys this object should be imported into.  Objects that are imported include interfaces, virtual routers, virtual wires, and VLANs.  Interfaces are typically imported into vsys1 if no vsys is specified.


  template (type: str)
    (Panorama only) The template this operation should target.  This param is required if the PAN-OS device is Panorama.





Notes
-----

.. note::
   - Checkmode is supported.
   - Panorama is supported.
   - PAN-OS connectivity should be specified using *provider* or the classic PAN-OS connectivity params (*ip_address*, *username*, *password*, *api_key*, and *port*).  If both are present, then the classic params are ignored.




Examples
--------

.. code-block:: yaml+jinja

    
    # Create tunnel.1
    - name: create tunnel.1
      panos_tunnel:
        provider: '{{ provider }}'
        if_name: "tunnel.1"
        ip: ["10.1.1.1/32"]

    # Update tunnel comment.
    - name: update tunnel.1 comment
      panos_tunnel:
        provider: '{{ provider }}'
        if_name: "tunnel.1"
        ip: ["10.1.1.1/32"]
        comment: "tunnel interface"





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Joshua Colson (@freakinhippie)

